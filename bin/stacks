#!/opt/ruby-bundle/bin/ruby

$LOAD_PATH << '/usr/local/lib/site_ruby/timgroup/'

require 'getoptlong'

require 'stackbuilder/stacks/factory'
require 'stackbuilder/support/logger'
require 'stackbuilder/support/cmd'

# options with defaults. an arbitrary option can be set here, this is not an exclusive list.
$options = {
  :environment => 'dev',
  :path        => ENV['STACKBUILDER_CONFIG_PATH'] || '/etc/stacks',
  :verbose     => 1
}

# options with arguments go straight into $options
# unrecognized options are ignored
GetoptLong.new(
  ['--environment', '-e', GetoptLong::REQUIRED_ARGUMENT],
  ['--path',        '-p', GetoptLong::REQUIRED_ARGUMENT],
  ['--stack',       '-s', GetoptLong::REQUIRED_ARGUMENT],
  ['--verbose',     '-v', GetoptLong::NO_ARGUMENT],
  ['--terse',       '-t', GetoptLong::NO_ARGUMENT]
).each do |opt, arg|
  opt_sym = opt[2..-1].to_sym
  case opt
  when '--verbose'
    $options[opt_sym] += 1
  when '--terse'
    $options[opt_sym] = true
  else
    $options[opt_sym] = arg
  end
end
cmd = ARGV.shift
argv = ARGV
logger(Logger::DEBUG) { "finished processing options. command: \"#{cmd}\", options: \"#{$options}\", argv: #{argv}" }

logger(Logger::DEBUG) { 'initializing $factory' }
$factory = Stacks::Factory.new
if ($environment = $factory.inventory.find_environment($options[:environment])).nil?
  logger(Logger::ERROR) { "environment \"#{$options[:environment]}\" not found" }
  exit 1
end
logger(Logger::DEBUG) { "environment \"#{$environment.name}\" has #{$environment.definitions.count} definitions" }

commands = CMD.new
if commands.cmds.include? cmd
  logger(Logger::DEBUG) { "about to execute command \"#{cmd}\"" }
  commands.method(cmd).call(argv)
else
  logger(Logger::FATAL) { "invalid command \"#{cmd}\"" }
  exit 1
end

logger(Logger::DEBUG) { 'exiting gracefuly' }
